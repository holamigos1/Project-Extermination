//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Resources/Input System/GameInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputActions"",
    ""maps"": [
        {
            ""name"": ""FPSCharacter"",
            ""id"": ""209e39b1-9e04-4f97-8cd3-ccd58af5e1d2"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""77500fb2-a1f0-4557-92e4-5f8cfde90f4a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""faa1aa14-3c4a-4c34-9abb-78038f5cf8ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""86942b1a-5624-4d82-b06a-b8c0f0194b59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throw"",
                    ""type"": ""Button"",
                    ""id"": ""c86d586c-221e-4ef1-b5f0-2668866c3b76"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sit Down"",
                    ""type"": ""Button"",
                    ""id"": ""a6d386c0-3752-4c17-9211-cceff9165640"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""8788498c-fb4b-46fe-952d-a0698c09741d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""1ffa6347-4cea-4d81-94ad-ebd2a985eeef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""c1f59f0f-9dbb-426d-bfb6-bb87dc5007f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""956e4a26-b25b-40be-9b76-78d032b02d95"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""62461ac0-198b-4bda-96f1-b0724da1ed34"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9773adfc-162d-48c0-a2ce-70649272d981"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""dcd04952-446c-4699-ad79-96f097dec1b9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1bd706e4-a89f-4830-8324-241c381bf1a8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a99a10bf-86db-462e-86ca-5c59fbe0d339"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""1a27979a-9cb3-44dd-9542-90300d87b390"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ce24e3a1-b38e-4616-abce-6621650d243f"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bdcf236b-3ad4-4251-99e9-adae43721d78"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d37d8a16-6d48-4765-bcdc-7286a59ebb97"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6f1e6d5b-828d-41d6-a1eb-23859237547e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9db2c9b6-1756-43c8-b365-b2082e9a8991"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1460f660-fdb6-43c5-801d-fdf03ac96d11"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67d038b5-4960-425b-b3f1-04703c813188"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Throw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3e9fce3-6c47-4abe-a88c-ff5a06e61c2c"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Sit Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c155c9f-44b5-4ad6-b2ca-c66d3e62a96b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81bf53c8-f8a4-4563-a94c-0c75b2817fe2"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ba78c3f-10c0-4e44-aef6-eb9566205ac0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9153eb0c-0eab-4d18-9fd4-b6a0725b061e"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // FPSCharacter
        m_FPSCharacter = asset.FindActionMap("FPSCharacter", throwIfNotFound: true);
        m_FPSCharacter_Move = m_FPSCharacter.FindAction("Move", throwIfNotFound: true);
        m_FPSCharacter_Interact = m_FPSCharacter.FindAction("Interact", throwIfNotFound: true);
        m_FPSCharacter_Reload = m_FPSCharacter.FindAction("Reload", throwIfNotFound: true);
        m_FPSCharacter_Throw = m_FPSCharacter.FindAction("Throw", throwIfNotFound: true);
        m_FPSCharacter_SitDown = m_FPSCharacter.FindAction("Sit Down", throwIfNotFound: true);
        m_FPSCharacter_Jump = m_FPSCharacter.FindAction("Jump", throwIfNotFound: true);
        m_FPSCharacter_Sprint = m_FPSCharacter.FindAction("Sprint", throwIfNotFound: true);
        m_FPSCharacter_Attack = m_FPSCharacter.FindAction("Attack", throwIfNotFound: true);
        m_FPSCharacter_Aim = m_FPSCharacter.FindAction("Aim", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FPSCharacter
    private readonly InputActionMap m_FPSCharacter;
    private IFPSCharacterActions m_FPSCharacterActionsCallbackInterface;
    private readonly InputAction m_FPSCharacter_Move;
    private readonly InputAction m_FPSCharacter_Interact;
    private readonly InputAction m_FPSCharacter_Reload;
    private readonly InputAction m_FPSCharacter_Throw;
    private readonly InputAction m_FPSCharacter_SitDown;
    private readonly InputAction m_FPSCharacter_Jump;
    private readonly InputAction m_FPSCharacter_Sprint;
    private readonly InputAction m_FPSCharacter_Attack;
    private readonly InputAction m_FPSCharacter_Aim;
    public struct FPSCharacterActions
    {
        private @GameInputActions m_Wrapper;
        public FPSCharacterActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_FPSCharacter_Move;
        public InputAction @Interact => m_Wrapper.m_FPSCharacter_Interact;
        public InputAction @Reload => m_Wrapper.m_FPSCharacter_Reload;
        public InputAction @Throw => m_Wrapper.m_FPSCharacter_Throw;
        public InputAction @SitDown => m_Wrapper.m_FPSCharacter_SitDown;
        public InputAction @Jump => m_Wrapper.m_FPSCharacter_Jump;
        public InputAction @Sprint => m_Wrapper.m_FPSCharacter_Sprint;
        public InputAction @Attack => m_Wrapper.m_FPSCharacter_Attack;
        public InputAction @Aim => m_Wrapper.m_FPSCharacter_Aim;
        public InputActionMap Get() { return m_Wrapper.m_FPSCharacter; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FPSCharacterActions set) { return set.Get(); }
        public void SetCallbacks(IFPSCharacterActions instance)
        {
            if (m_Wrapper.m_FPSCharacterActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnMove;
                @Interact.started -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnInteract;
                @Reload.started -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnReload;
                @Throw.started -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnThrow;
                @Throw.performed -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnThrow;
                @Throw.canceled -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnThrow;
                @SitDown.started -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnSitDown;
                @SitDown.performed -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnSitDown;
                @SitDown.canceled -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnSitDown;
                @Jump.started -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnJump;
                @Sprint.started -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnSprint;
                @Attack.started -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnAttack;
                @Aim.started -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_FPSCharacterActionsCallbackInterface.OnAim;
            }
            m_Wrapper.m_FPSCharacterActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @Throw.started += instance.OnThrow;
                @Throw.performed += instance.OnThrow;
                @Throw.canceled += instance.OnThrow;
                @SitDown.started += instance.OnSitDown;
                @SitDown.performed += instance.OnSitDown;
                @SitDown.canceled += instance.OnSitDown;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
            }
        }
    }
    public FPSCharacterActions @FPSCharacter => new FPSCharacterActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    public interface IFPSCharacterActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnThrow(InputAction.CallbackContext context);
        void OnSitDown(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
    }
}
